# deny everything and allow specific entries
# Start with everything blocked as a safeguard and open things customers need and what's safe OOTB
/0001 { /type "deny"  /url "*" }

# Open consoles if this isn't a production environment by uncommenting the next few lines
# /002 { /type "allow" /url "/crx/*"    }  # allow content repository
# /003 { /type "allow" /url "/system/*" }  # allow OSGi console

# allow non-public content directories if this isn't a production environment by uncommenting the next few lines
# /004 { /type "allow" /url "/apps/*"   }  # allow apps access
# /005 { /type "allow" /url "/bin/*"    }  # allow bin path access


/0011 { /type "allow" /extension "json" /selectors '(model|captcha|subscription|sitefooter)' /path "/*" }

# Enable specific mime types clientlibs directories
/0012 { /type "allow" /method "GET" /extension '(css|eot|gif|ico|jpeg|jpg|js|gif|png|svg|swf|ttf|woff|woff2)' /path "/etc/clientlibs/*" }

# Enable clientlibs proxy servlet
/0013 { /type "allow" /method "GET" /url "/etc.clientlibs/*" }

# Enable basic features
/0014 { /type "allow" /method "GET" /url '/libs/granite/csrf/token.json' /extension 'json' } # AEM provides a framework aimed at preventing Cross-Site Request Forgery attacks
/0015 { /type "allow" /method "POST" /url "/[.]*.form.html" }  # allow POSTs to form selectors under content

/0016 { /type "allow" /method "GET" /path "/libs/cq/personalization" }  # enable personalization
/0017 { /type "allow" /method "POST" /path "/[.]*.commerce.cart.json" }  # allow POSTs to update the shopping cart

# Enable access to /etc/designs
/0018 { /type "allow" /method "GET" /url "/etc/designs/*" }

# Enable access to /libs/cq
/0019 { /type "allow" /method "GET" /url "/libs/*" }
/0020 { /type "deny" /url "/libs/granite/ui/content/dumplibs*" }

/0021 { /type "allow" /method "GET" /url "/content/GNB3/home*" }
/0024 { /type "allow" /method "GET" /url "/content/GNB3/en*" }
/0025 { /type "allow" /method "GET" /url "/content/GNB3/fr*" }
/0026 { /type "allow" /method "GET" /url "/content/dam/*" }
/0027 { /type "allow" /method "GET" /url "/content/experience-fragments/GNB3/*" }
/0028 { /type "allow" /method "GET" /url "/content/GNB3/bil*" }
/0029 { /type "allow" /method "GET" /url "/content/GNB3/robots.txt" }

# Deny content grabbing for greedy queries and prevent un-intended self DOS attacks
/0100 { /type "deny" /selectors '(feed|rss|pages|languages|blueprint|infinity|tidy|sysview|docview|query|[0-9-]+|jcr:content|_jcr_content)' /extension '(json|html|feed)' }

# Deny authoring query params
/0101 { /type "deny" /method "GET" /query "debug=*" }
/0102 { /type "deny" /method "GET" /query "wcmmode=*" }

# Deny front door entry
/0103 { /type "deny" /path "/ams/healthcheck/*" }
/0104 { /type "deny" /url "/regent.html" }

# Allow AEM sitemaps
/0200 { /type "allow" /path "/*" /selectors '(sitemap-index|sitemap)' /extension "xml" }

#Allow bin path access for POSTs - Google recaptcha
/0201 { /type "allow" /method "POST" /path "/bin/*" }  # allow bin path access for POSTs

#Allow /content/GNB3 path access for POSTs - core form
/0202 { /type "allow" /method "POST" /url "/content/GNB3/*.html" }
#/0203 { /type "allow" /method "POST" /url "/en/*.html" }
#/0204 { /type "allow" /method "POST" /url "/fr/*.html" }